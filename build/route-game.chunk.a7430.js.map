{"version":3,"sources":["webpack:///route-game.chunk.a7430.js","webpack:///./components/location/style.scss","webpack:///./components/conversation/style.scss","webpack:///./components/character/index.js","webpack:///./components/arrow/index.js","webpack:///./components/location/index.js","webpack:///./components/conversation/index.js","webpack:///./components/inventory/index.js","webpack:///./components/task-list/index.js","webpack:///./components/task-description/index.js","webpack:///./components/chest/index.js","webpack:///./components/message/index.js","webpack:///./actions/general.js","webpack:///./actions/conversation.js","webpack:///./actions/book.js","webpack:///./selectors/general.js","webpack:///./selectors/conversation.js","webpack:///./selectors/book.js","webpack:///./routes/game/index.js","webpack:///./components/arrow/style.scss","webpack:///./components/task-description/style.scss","webpack:///../node_modules/reselect/lib/index.js","webpack:///../node_modules/reselect-immutable-helpers/node_modules/immutable/dist/immutable.js","webpack:///./components/character/style.scss","webpack:///./components/message/style.scss","webpack:///./components/inventory/style.scss","webpack:///./components/chest/style.scss","webpack:///../node_modules/reselect-immutable-helpers/dist.js","webpack:///./components/task-list/style.scss","webpack:///./routes/game/style.scss"],"names":["webpackJsonp","9UV0","module","exports","location--type-firstLocation","Vasia","secondLocation","location--type-secondLocation","Sokol","firstLocation","location","A00b","conversation","conversation--bg","conversation--answers","conversation--content","conversation--text","conversation--avatar","conversation--hr","conversation--name","conversation--panel","conversation--button-disabled","B8ml","__webpack_exports__","__webpack_require__","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","preact_min","preact_redux_esm","dist","style","style_default","n","character_style","character_style_default","Character","_ref","name","className","handlerClick","character","onClick","src","toLowerCase","alt","arrow_style","arrow_style_default","Arrow","type","handlerOnClick","arrow","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","Location","characters","nextLocations","handlerChangeLocation","handlerClickCharacter","map","components_character","conversation_style","conversation_style_default","_ref2","title","Conversation","dialog","handlerNextDialog","handlerCloseDialog","checkConditions","text","Array","isArray","answers","filter","answer","close","chest_style","chest_style_default","inventory_style","inventory_style_default","Inventory","inventory","object","description","task_list_style","task_list_style_default","TaskList","tasks","displayTask","task","idx","status","task_description_style","task_description_style_default","TaskDescription","tips","tip","chest__ref2","_ref3","Chest","open","handlerOpenChest","handlerCloseChest","handlerDisplayTask","chest","components_inventory","task_list","task_description","message_style","message_style_default","message__ref2","Message","message","reload","es","actions","changeLocation","createAction","CHANGE_LOCATION","locationName","addObjectToInventory","ADD_OBJECT_TO_INVENTORY","removeObjectToInventory","REMOVE_OBJECT_TO_INVENTORY","openChest","OPEN_CHEST","closeChest","CLOSE_CHEST","setMessage","SET_MESSAGE","startDialog","START_DIALOG","characterName","nextDialog","NEXT_DIALOG","closeDialog","CLOSE_DIALOG","saveCharacterToHistory","SAVE_CHARACTER_TO_HISTORY","addTask","ADD_TASK","taskName","changeStatusTask","CHANGE_STATUS_TASK","addTipToTask","ADD_TIP_TO_TASK","displayTaskAction","DISPLAY_TASK","getGeneral","createGetSelector","state","getLocationActive","getInventory","isOpenChestSelector","getMessageSelector","getConversation","getDialog","getCharacter","getBook","getTasks","displayTaskSelect","game_style","game_style_default","game__extends","Game","_Component","_temp","_this","_ret","_len","args","_key","this","apply","concat","handlerDialog","_this$props","props","handlerAddTask","handlerAddTipToTask","handlerSaveCharacterToHistory","handlerAddInventory","handlerRemoveInventory","handlerChangeStatusTask","history","action","params","forEach","_this$props2","handlerSetMessage","conditions","_this$props3","every","find","_object","render","_props","locationActive","isOpenChest","handlerStartDialog","id","class","game","components_location","components_conversation","components_message","Component","mapStateToProps","createPropsSelector","mapDispatchToProps","dispatch","connect","DWKC","Dmfw","task-description","task-description--hr","task-description--tip","SdCE","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","defaultMemoize","func","undefined","lastArgs","lastResult","getDependencies","funcs","dependencies","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","memoizeOptions","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","selector","push","resetRecomputations","createStructuredSelector","selectors","selectorCreator","createSelector","objectKeys","keys","_len3","values","_key3","reduce","composition","index","__esModule","VPkN","global","factory","createClass","ctor","Iterable","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","newArr","ii","ensureSize","iter","size","__iterate","returnTrue","wrapIndex","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","Iterator","iteratorValue","k","v","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","ArraySeq","array","_array","ObjectSeq","_keys","IterableSeq","_iterable","IteratorSeq","iterator","_iterator","_iteratorCache","isSeq","maybeSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","seq","maybeIndexedSeqFromValue","seqIterate","fn","reverse","useKeys","cache","_cache","maxIndex","entry","__iterateUncached","seqIterator","__iteratorUncached","fromJS","json","converter","fromJSWith","","fromJSDefault","parentJSON","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","__hash","notAssociative","entries","flipped","cacheResult","_","allEqual","bSize","has","get","NOT_SET","Repeat","times","_value","Infinity","EMPTY_REPEAT","Range","start","step","abs","_start","_end","_step","ceil","EMPTY_RANGE","Collection","KeyedCollection","IndexedCollection","SetCollection","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","toString","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","nodeType","node","uniqueID","documentElement","assertNotInfinite","Map","emptyMap","isMap","withMutations","maybeMap","IS_MAP_SENTINEL","ArrayMapNode","ownerID","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","MapIterator","_type","_reverse","_stack","_root","mapIteratorFrame","mapIteratorValue","__prev","makeMap","root","MapPrototype","__ownerID","__altered","EMPTY_MAP","updateMap","newRoot","newSize","didChangeSize","CHANGE_LENGTH","didAlter","DID_ALTER","updateNode","shift","update","isLeafNode","mergeIntoNode","newNode","idx1","MASK","idx2","SHIFT","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","SIZE","mergeIntoMapWith","merger","iterables","iters","mergeIntoCollectionWith","deepMerger","existing","mergeDeep","deepMergerWith","mergeDeepWith","nextValue","collection","x","mergeIntoMap","updateInDeepMap","keyPathIter","notSetValue","updater","isNotSet","existingValue","newValue","nextExisting","nextUpdated","remove","popCount","setIn","val","canEdit","newArray","spliceIn","newLen","after","spliceOut","List","empty","emptyList","isList","makeList","VNode","toArray","list","setSize","maybeList","IS_LIST_SENTINEL","iterateList","iterateNodeOrLeaf","level","iterateLeaf","iterateNode","tailPos","tail","from","left","to","right","DONE","_origin","_capacity","getTailOffset","_tail","_level","origin","capacity","ListPrototype","EMPTY_LIST","updateList","setListBounds","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","editableVNode","slice","listNodeFor","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","clear","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","removeAfter","removeBefore","beginIndex","mergeIntoListWith","maxSize","OrderedMap","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","EMPTY_ORDERED_MAP","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","includes","cacheResultThrough","this$0","ITERATE_ENTRIES","__iterator","ITERATE_VALUES","ITERATE_KEYS","mapFactory","mapper","context","mappedSequence","c","reverseFactory","filterFactory","predicate","filterSequence","iterations","countByFactory","grouper","groups","asMutable","asImmutable","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","singleton","concatSeq","flatten","sum","flattenFactory","depth","flatSequence","flatDeep","currentDepth","stopped","stack","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","validateEntry","resolveSize","forceIterator","keyPath","Record","defaultValues","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","makeRecord","likeRecord","record","getPrototypeOf","recordName","names","setProp","bind","error","Set","emptySet","isSet","add","maybeSet","IS_SET_SENTINEL","updateSet","__empty","__make","makeSet","SetPrototype","EMPTY_SET","OrderedSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","makeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","makeStack","head","StackPrototype","_head","EMPTY_STACK","mixin","methods","keyCopier","getOwnPropertySymbols","keyMapper","entryMapper","not","neg","quoteString","JSON","stringify","String","defaultZipper","defaultNegComparator","hashIterable","ordered","keyed","murmurHashOfSize","hashMerge","imul","SLICE$0","Keyed","Indexed","Symbol","ITERATOR_SYMBOL","KEYS","VALUES","ENTRIES","inspect","toSource","of","__toString","searchValue","indexOf","lastIndexOf","other","possibleIndex","floor","offsetValue","d","e","WeakMap","keyValues","updateIn","deleteIn","updatedValue","merge","mergeWith","mergeIn","m","mergeDeepIn","sortBy","mutable","wasAltered","__ensureOwner","iterate","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","subNode","splice","insert","oldSize","unshift","originIndex","newChild","removingFirst","oldChild","editable","sizeIndex","valueSeq","indexedIterable","defaultVal","_empty","fromKeys","keySeq","union","intersect","originalSet","subtract","peek","pushAll","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","returnValue","findEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","isEmpty","countBy","entriesSequence","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyOf","last","lastKeyOf","maxBy","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","IterablePrototype","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith","b1zY","character--name","lCuA","message--bg","message--text","message--out","nfdf","inventory--item","pMzk","chest--modal","chest--bg","chest--close","chest--target","chest--content","chest--title","qTRi","createHasSelector","invertSelector","ensureJSSelector","selectorToJS","createImmutableComparingSelector","_typeof","_reselect","require","_immutable","_immutable2","default","raw","item","wrappedSelectors","defaultValue","keyValue","bool","sNnD","task-list--item","task-list--item-actived","task-list","task-list--empty","task-list--status","task-list--name","task-list--index","vJ5B"],"mappings":"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","file":"route-game.chunk.a7430.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"9UV0\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"location--type-firstLocation\":\"location--type-firstLocation__3l4S8\",\"Vasia\":\"Vasia__3aWyP\",\"secondLocation\":\"secondLocation__2AT-1\",\"location--type-secondLocation\":\"location--type-secondLocation__sxnew\",\"Sokol\":\"Sokol__16riw\",\"firstLocation\":\"firstLocation__Fp9IR\",\"location\":\"location__3MKUz\"};\n\n/***/ }),\n\n/***/ \"A00b\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"conversation\":\"conversation__3mSUd\",\"conversation--bg\":\"conversation--bg__1GN0n\",\"conversation--answers\":\"conversation--answers__2I6Qb\",\"conversation--content\":\"conversation--content__1vt9r\",\"conversation--text\":\"conversation--text__-mA6T\",\"conversation--avatar\":\"conversation--avatar__2aZM9\",\"conversation--hr\":\"conversation--hr__2PzA8\",\"conversation--name\":\"conversation--name__1cuZh\",\"conversation--panel\":\"conversation--panel__1Z4sp\",\"conversation--button-disabled\":\"conversation--button-disabled__3xhhD\"};\n\n/***/ }),\n\n/***/ \"B8ml\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"KM04\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ../node_modules/preact-redux/dist/preact-redux.esm.js\nvar preact_redux_esm = __webpack_require__(\"E/bI\");\n\n// EXTERNAL MODULE: ../node_modules/reselect-immutable-helpers/dist.js\nvar dist = __webpack_require__(\"qTRi\");\nvar dist_default = /*#__PURE__*/__webpack_require__.n(dist);\n\n// EXTERNAL MODULE: ./components/location/style.scss\nvar style = __webpack_require__(\"9UV0\");\nvar style_default = /*#__PURE__*/__webpack_require__.n(style);\n\n// EXTERNAL MODULE: ./components/character/style.scss\nvar character_style = __webpack_require__(\"b1zY\");\nvar character_style_default = /*#__PURE__*/__webpack_require__.n(character_style);\n\n// CONCATENATED MODULE: ./components/character/index.js\n\n\n\nvar character_Character = function Character(_ref) {\n\tvar name = _ref.name,\n\t    available = _ref.available,\n\t    className = _ref.className,\n\t    handlerClick = _ref.handlerClick;\n\treturn Object(preact_min[\"h\"])(\n\t\t'div',\n\t\t{ className: character_style_default.a.character + ' ' + character_style_default.a.character + '--how-' + name + ' ' + className, onClick: function onClick() {\n\t\t\t\treturn handlerClick(name);\n\t\t\t} },\n\t\tObject(preact_min[\"h\"])(\n\t\t\t'div',\n\t\t\t{ className: character_style_default.a['character--name'] },\n\t\t\tname\n\t\t),\n\t\tObject(preact_min[\"h\"])('img', { src: '/assets/characters/' + name.toLowerCase() + '.png', alt: name })\n\t);\n};\n\n/* harmony default export */ var components_character = (character_Character);\n// EXTERNAL MODULE: ./components/arrow/style.scss\nvar arrow_style = __webpack_require__(\"DWKC\");\nvar arrow_style_default = /*#__PURE__*/__webpack_require__.n(arrow_style);\n\n// CONCATENATED MODULE: ./components/arrow/index.js\n\n\n\nvar arrow_Arrow = function Arrow(_ref) {\n\tvar name = _ref.name,\n\t    available = _ref.available,\n\t    type = _ref.type,\n\t    className = _ref.className,\n\t    handlerOnClick = _ref.handlerOnClick;\n\treturn Object(preact_min[\"h\"])(\n\t\t\"div\",\n\t\t{ className: arrow_style_default.a.arrow + \" \" + className },\n\t\tObject(preact_min[\"h\"])(\"img\", { src: \"/assets/arrows/\" + type + \".svg\", alt: \"arrow\", onClick: function onClick() {\n\t\t\t\treturn handlerOnClick(name);\n\t\t\t} })\n\t);\n};\n\n/* harmony default export */ var arrow = (arrow_Arrow);\n// CONCATENATED MODULE: ./components/location/index.js\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\nvar location_Location = function Location(_ref) {\n\tvar name = _ref.name,\n\t    characters = _ref.characters,\n\t    nextLocations = _ref.nextLocations,\n\t    handlerChangeLocation = _ref.handlerChangeLocation,\n\t    handlerClickCharacter = _ref.handlerClickCharacter;\n\treturn Object(preact_min[\"h\"])(\n\t\t'div',\n\t\t{ className: style_default.a.location + ' ' + style_default.a['location--type-' + name] },\n\t\tObject(preact_min[\"h\"])('img', { src: '/assets/locations/' + name + '.jpg', alt: 'location' }),\n\t\tcharacters.map(function (character) {\n\t\t\treturn Object(preact_min[\"h\"])(components_character, _extends({}, character, { className: style_default.a[character.name],\n\t\t\t\thandlerClick: handlerClickCharacter\n\t\t\t}));\n\t\t}),\n\t\tnextLocations.map(function (location) {\n\t\t\treturn Object(preact_min[\"h\"])(arrow, _extends({}, location, { className: style_default.a[location.name],\n\t\t\t\thandlerOnClick: handlerChangeLocation\n\t\t\t}));\n\t\t})\n\t);\n};\n\n/* harmony default export */ var components_location = (location_Location);\n// EXTERNAL MODULE: ./components/conversation/style.scss\nvar conversation_style = __webpack_require__(\"A00b\");\nvar conversation_style_default = /*#__PURE__*/__webpack_require__.n(conversation_style);\n\n// CONCATENATED MODULE: ./components/conversation/index.js\n\n\n\nvar _ref2 = Object(preact_min[\"h\"])('img', { src: '/assets/conversation/forward.svg', alt: '\\u041F\\u043E\\u043A\\u0438\\u043D\\u0443\\u0442\\u044C \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433', title: '\\u041F\\u043E\\u043A\\u0438\\u043D\\u0443\\u0442\\u044C \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433' });\n\nvar conversation_Conversation = function Conversation(_ref) {\n\tvar character = _ref.character,\n\t    dialog = _ref.dialog,\n\t    handlerNextDialog = _ref.handlerNextDialog,\n\t    handlerCloseDialog = _ref.handlerCloseDialog,\n\t    checkConditions = _ref.checkConditions;\n\treturn Object(preact_min[\"h\"])(\n\t\t'div',\n\t\tnull,\n\t\tObject(preact_min[\"h\"])(\n\t\t\t'div',\n\t\t\t{ className: conversation_style_default.a.conversation },\n\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t'div',\n\t\t\t\t{ className: conversation_style_default.a['conversation--content'] },\n\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: conversation_style_default.a['conversation--text'] },\n\t\t\t\t\tdialog.text\n\t\t\t\t),\n\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t'ul',\n\t\t\t\t\t{ className: conversation_style_default.a['conversation--answers'] },\n\t\t\t\t\tArray.isArray(dialog.answers) && dialog.answers.filter(checkConditions).map(function (answer) {\n\t\t\t\t\t\treturn Object(preact_min[\"h\"])(\n\t\t\t\t\t\t\t'li',\n\t\t\t\t\t\t\t{ onClick: function onClick() {\n\t\t\t\t\t\t\t\t\treturn handlerNextDialog(answer);\n\t\t\t\t\t\t\t\t} },\n\t\t\t\t\t\t\tanswer.text\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t),\n\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t'div',\n\t\t\t\t{ className: conversation_style_default.a['conversation--avatar'] },\n\t\t\t\tObject(preact_min[\"h\"])('img', { src: '/assets/characters/avatar-' + character.name.toLowerCase() + '.png', alt: name }),\n\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: conversation_style_default.a['conversation--name'] },\n\t\t\t\t\tcharacter.name\n\t\t\t\t)\n\t\t\t),\n\t\t\tObject(preact_min[\"h\"])('hr', { className: conversation_style_default.a['conversation--hr'] }),\n\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t'div',\n\t\t\t\t{ className: conversation_style_default.a['conversation--panel'] },\n\t\t\t\tObject(preact_min[\"h\"])(\n\t\t\t\t\t'button',\n\t\t\t\t\t{ type: 'button', className: dialog.close ? '' : conversation_style_default.a['conversation--button-disabled'],\n\t\t\t\t\t\tonClick: handlerCloseDialog\n\t\t\t\t\t},\n\t\t\t\t\t_ref2\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\tObject(preact_min[\"h\"])('div', { className: conversation_style_default.a['conversation--bg'] })\n\t);\n};\n\n/* harmony default export */ var components_conversation = (conversation_Conversation);\n// EXTERNAL MODULE: ./components/chest/style.scss\nvar chest_style = __webpack_require__(\"pMzk\");\nvar chest_style_default = /*#__PURE__*/__webpack_require__.n(chest_style);\n\n// EXTERNAL MODULE: ./components/inventory/style.scss\nvar inventory_style = __webpack_require__(\"nfdf\");\nvar inventory_style_default = /*#__PURE__*/__webpack_require__.n(inventory_style);\n\n// CONCATENATED MODULE: ./components/inventory/index.js\n\n\n\nvar inventory_Inventory = function Inventory(_ref) {\n  var inventory = _ref.inventory;\n  return Object(preact_min[\"h\"])(\n    'div',\n    { className: inventory_style_default.a.inventory },\n    Array.isArray(inventory) && inventory.map(function (object) {\n      return Object(preact_min[\"h\"])(\n        'div',\n        { className: inventory_style_default.a['inventory--item'] },\n        Object(preact_min[\"h\"])('img', { src: '/assets/anothers/' + object.name + '.svg', alt: object.name, title: object.description })\n      );\n    })\n  );\n};\n\n/* harmony default export */ var components_inventory = (inventory_Inventory);\n// EXTERNAL MODULE: ./components/task-list/style.scss\nvar task_list_style = __webpack_require__(\"sNnD\");\nvar task_list_style_default = /*#__PURE__*/__webpack_require__.n(task_list_style);\n\n// CONCATENATED MODULE: ./components/task-list/index.js\n\n\n\nvar task_list_TaskList = function TaskList(_ref) {\n  var tasks = _ref.tasks,\n      handlerClick = _ref.handlerClick,\n      displayTask = _ref.displayTask;\n  return Object(preact_min[\"h\"])(\n    'div',\n    { className: task_list_style_default.a['task-list'] },\n    Array.isArray(tasks) && tasks.length ? tasks.map(function (task, idx) {\n      return Object(preact_min[\"h\"])(\n        'div',\n        { className: task_list_style_default.a['task-list--item'] + ' ' + (displayTask && displayTask.name === task.name ? task_list_style_default.a['task-list--item-actived'] : ''), onClick: function onClick() {\n            return handlerClick(task);\n          } },\n        Object(preact_min[\"h\"])(\n          'div',\n          { className: task_list_style_default.a['task-list--index'] },\n          idx + 1\n        ),\n        Object(preact_min[\"h\"])(\n          'div',\n          { className: task_list_style_default.a['task-list--name'] },\n          task.title\n        ),\n        Object(preact_min[\"h\"])(\n          'div',\n          { className: task_list_style_default.a['task-list--status'] },\n          task.status\n        )\n      );\n    }) : Object(preact_min[\"h\"])(\n      'div',\n      { className: task_list_style_default.a['task-list--empty'] },\n      '\\u041D\\u0435\\u0442\\u0443 \\u043F\\u043E\\u043A\\u0430 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0439'\n    )\n  );\n};\n\n/* harmony default export */ var task_list = (task_list_TaskList);\n// EXTERNAL MODULE: ./components/task-description/style.scss\nvar task_description_style = __webpack_require__(\"Dmfw\");\nvar task_description_style_default = /*#__PURE__*/__webpack_require__.n(task_description_style);\n\n// CONCATENATED MODULE: ./components/task-description/index.js\n\n\n\nvar task_description_TaskDescription = function TaskDescription(_ref) {\n  var description = _ref.description,\n      tips = _ref.tips;\n  return Object(preact_min[\"h\"])(\n    'div',\n    { className: task_description_style_default.a['task-description'] },\n    description,\n    Object(preact_min[\"h\"])('hr', { className: task_description_style_default.a['task-description--hr'] }),\n    Array.isArray(tips) && tips.map(function (tip) {\n      return Object(preact_min[\"h\"])(\n        'div',\n        { className: task_description_style_default.a['task-description--tip'] },\n        tip,\n        Object(preact_min[\"h\"])('hr', { className: task_description_style_default.a['task-description--hr'] })\n      );\n    })\n  );\n};\n\n/* harmony default export */ var task_description = (task_description_TaskDescription);\n// CONCATENATED MODULE: ./components/chest/index.js\n\n\n\n\n\n\nvar chest__ref2 = Object(preact_min[\"h\"])('img', { src: '/assets/anothers/treasure.svg', alt: '\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u0441\\u0443\\u043D\\u0434\\u0443\\u043A', title: '\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u0441\\u0443\\u043D\\u0434\\u0443\\u043A' });\n\nvar _ref3 = Object(preact_min[\"h\"])('img', { src: '/assets/anothers/close.svg', alt: '\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u0441\\u0443\\u043D\\u0434\\u0443\\u043A', title: '\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u0441\\u0443\\u043D\\u0434\\u0443\\u043A' });\n\nvar chest_Chest = function Chest(_ref) {\n  var open = _ref.open,\n      inventory = _ref.inventory,\n      tasks = _ref.tasks,\n      displayTask = _ref.displayTask,\n      handlerOpenChest = _ref.handlerOpenChest,\n      handlerCloseChest = _ref.handlerCloseChest,\n      handlerDisplayTask = _ref.handlerDisplayTask;\n  return Object(preact_min[\"h\"])(\n    'div',\n    { className: chest_style_default.a.chest },\n    Object(preact_min[\"h\"])(\n      'button',\n      { type: 'button', className: chest_style_default.a['chest--target'], onClick: handlerOpenChest },\n      chest__ref2\n    ),\n    open && Object(preact_min[\"h\"])(\n      'div',\n      { className: chest_style_default.a['chest--modal'] },\n      Object(preact_min[\"h\"])(\n        'div',\n        { className: chest_style_default.a['chest--content'] },\n        Object(preact_min[\"h\"])(\n          'div',\n          { className: chest_style_default.a['chest--title'] },\n          '\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u044C'\n        ),\n        Object(preact_min[\"h\"])(components_inventory, { inventory: inventory })\n      ),\n      Object(preact_min[\"h\"])(\n        'div',\n        { className: chest_style_default.a['chest--content'] },\n        Object(preact_min[\"h\"])(\n          'div',\n          { className: chest_style_default.a['chest--title'] },\n          '\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0439'\n        ),\n        Object(preact_min[\"h\"])(task_list, { tasks: tasks, handlerClick: handlerDisplayTask, displayTask: displayTask })\n      ),\n      displayTask && Object(preact_min[\"h\"])(\n        'div',\n        { className: chest_style_default.a['chest--content'] },\n        Object(preact_min[\"h\"])(\n          'div',\n          { className: chest_style_default.a['chest--title'] },\n          displayTask.title\n        ),\n        Object(preact_min[\"h\"])(task_description, displayTask)\n      ),\n      Object(preact_min[\"h\"])(\n        'button',\n        { type: 'button', className: chest_style_default.a['chest--close'], onClick: handlerCloseChest },\n        _ref3\n      )\n    ),\n    Object(preact_min[\"h\"])('div', { className: chest_style_default.a['сhest--bg'] })\n  );\n};\n\n/* harmony default export */ var chest = (chest_Chest);\n// EXTERNAL MODULE: ./components/message/style.scss\nvar message_style = __webpack_require__(\"lCuA\");\nvar message_style_default = /*#__PURE__*/__webpack_require__.n(message_style);\n\n// CONCATENATED MODULE: ./components/message/index.js\n\n\n\nvar message__ref2 = Object(preact_min[\"h\"])('img', { src: '/assets/conversation/forward.svg' });\n\nvar message_Message = function Message(_ref) {\n  var message = _ref.message;\n  return Object(preact_min[\"h\"])(\n    'div',\n    null,\n    Object(preact_min[\"h\"])(\n      'div',\n      { className: message_style_default.a.message },\n      Object(preact_min[\"h\"])(\n        'div',\n        { className: message_style_default.a['message--text'] },\n        message\n      ),\n      Object(preact_min[\"h\"])(\n        'button',\n        { onClick: function onClick() {\n            return location.reload();\n          }, className: message_style_default.a['message--out'], type: 'button' },\n        message__ref2\n      )\n    ),\n    Object(preact_min[\"h\"])('div', { className: message_style_default.a['message--bg'] })\n  );\n};\n\n/* harmony default export */ var components_message = (message_Message);\n// EXTERNAL MODULE: ../node_modules/redux-actions/es/index.js + 26 modules\nvar es = __webpack_require__(\"bKsd\");\n\n// EXTERNAL MODULE: ./constants/actions.js\nvar actions = __webpack_require__(\"5QES\");\n\n// CONCATENATED MODULE: ./actions/general.js\n\n\n\nvar changeLocation = Object(es[\"a\" /* createAction */])(actions[\"d\" /* CHANGE_LOCATION */], function (locationName) {\n  return locationName;\n});\n\nvar addObjectToInventory = Object(es[\"a\" /* createAction */])(actions[\"a\" /* ADD_OBJECT_TO_INVENTORY */], function (object) {\n  return object;\n});\n\nvar removeObjectToInventory = Object(es[\"a\" /* createAction */])(actions[\"k\" /* REMOVE_OBJECT_TO_INVENTORY */], function (object) {\n  return object;\n});\n\nvar openChest = Object(es[\"a\" /* createAction */])(actions[\"j\" /* OPEN_CHEST */]);\n\nvar closeChest = Object(es[\"a\" /* createAction */])(actions[\"f\" /* CLOSE_CHEST */]);\n\nvar setMessage = Object(es[\"a\" /* createAction */])(actions[\"m\" /* SET_MESSAGE */], function (message) {\n  return message;\n});\n// EXTERNAL MODULE: ../node_modules/redux-actions/es/createAction.js + 1 modules\nvar createAction = __webpack_require__(\"OY3Y\");\n\n// CONCATENATED MODULE: ./actions/conversation.js\n\n\n\nvar startDialog = Object(createAction[\"a\" /* default */])(actions[\"n\" /* START_DIALOG */], function (characterName) {\n  return characterName;\n});\n\nvar nextDialog = Object(createAction[\"a\" /* default */])(actions[\"i\" /* NEXT_DIALOG */], function (conversation) {\n  return conversation;\n});\n\nvar closeDialog = Object(createAction[\"a\" /* default */])(actions[\"g\" /* CLOSE_DIALOG */], function (conversation) {\n  return conversation;\n});\n\nvar saveCharacterToHistory = Object(createAction[\"a\" /* default */])(actions[\"l\" /* SAVE_CHARACTER_TO_HISTORY */], function (character) {\n  return character;\n});\n// CONCATENATED MODULE: ./actions/book.js\n\n\n\nvar addTask = Object(createAction[\"a\" /* default */])(actions[\"b\" /* ADD_TASK */], function (taskName) {\n  return taskName;\n});\n\nvar changeStatusTask = Object(createAction[\"a\" /* default */])(actions[\"e\" /* CHANGE_STATUS_TASK */], function (task) {\n  return task;\n});\n\nvar addTipToTask = Object(createAction[\"a\" /* default */])(actions[\"c\" /* ADD_TIP_TO_TASK */], function (task) {\n  return task;\n});\n\nvar displayTaskAction = Object(createAction[\"a\" /* default */])(actions[\"h\" /* DISPLAY_TASK */], function (task) {\n  return task;\n});\n// CONCATENATED MODULE: ./selectors/general.js\n\n\nvar getGeneral = Object(dist[\"createGetSelector\"])(function (state) {\n  return state;\n}, 'general');\n\nvar getLocationActive = Object(dist[\"createGetSelector\"])(getGeneral, 'locationActive');\n\nvar getInventory = Object(dist[\"createGetSelector\"])(getGeneral, 'inventory');\n\nvar isOpenChestSelector = Object(dist[\"createGetSelector\"])(getGeneral, 'isOpenChest');\n\nvar getMessageSelector = Object(dist[\"createGetSelector\"])(getGeneral, 'message');\n// CONCATENATED MODULE: ./selectors/conversation.js\n\n\nvar getConversation = Object(dist[\"createGetSelector\"])(function (state) {\n  return state;\n}, 'conversation');\n\nvar getDialog = Object(dist[\"createGetSelector\"])(getConversation, 'dialog');\n\nvar getCharacter = Object(dist[\"createGetSelector\"])(getConversation, 'character');\n// CONCATENATED MODULE: ./selectors/book.js\n\n\nvar getBook = Object(dist[\"createGetSelector\"])(function (state) {\n  return state;\n}, 'book');\n\nvar getTasks = Object(dist[\"createGetSelector\"])(getBook, 'tasks');\n\nvar displayTaskSelect = Object(dist[\"createGetSelector\"])(getBook, 'displayTask');\n// EXTERNAL MODULE: ./routes/game/style.scss\nvar game_style = __webpack_require__(\"vJ5B\");\nvar game_style_default = /*#__PURE__*/__webpack_require__.n(game_style);\n\n// CONCATENATED MODULE: ../node_modules/babel-loader/lib??ref--0!./routes/game/index.js\nvar game__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar game_Game = function (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handlerDialog = function (answer) {\n      var _this$props = _this.props,\n          handlerNextDialog = _this$props.handlerNextDialog,\n          handlerAddTask = _this$props.handlerAddTask,\n          handlerAddTipToTask = _this$props.handlerAddTipToTask,\n          handlerSaveCharacterToHistory = _this$props.handlerSaveCharacterToHistory,\n          handlerCloseDialog = _this$props.handlerCloseDialog,\n          handlerAddInventory = _this$props.handlerAddInventory,\n          handlerRemoveInventory = _this$props.handlerRemoveInventory,\n          handlerChangeStatusTask = _this$props.handlerChangeStatusTask;\n      var character = answer.character,\n          task = answer.task,\n          message = answer.message,\n          history = answer.history,\n          close = answer.close,\n          inventory = answer.inventory;\n\n\n      if (character) {\n        handlerNextDialog(character);\n      }\n\n      if (task) {\n        if (task.action === 'add') {\n          handlerAddTask(task.name);\n        } else if (task.action === 'tip') {\n          handlerAddTipToTask(task.params);\n        } else if (task.action === 'change_status') {\n          handlerChangeStatusTask(task.params);\n        }\n      }\n\n      if (inventory) {\n        if (inventory.action === 'add') {\n          handlerAddInventory(inventory.object);\n        } else if (inventory.action === 'remove') {\n          handlerRemoveInventory(inventory.object);\n        }\n      }\n\n      if (history && history.characters) {\n        history.characters.forEach(function (character) {\n          handlerSaveCharacterToHistory(character);\n        });\n      }\n\n      if (close) {\n        handlerCloseDialog();\n      }\n    }, _this.handlerCloseDialog = function () {\n      var _this$props2 = _this.props,\n          handlerCloseDialog = _this$props2.handlerCloseDialog,\n          handlerSetMessage = _this$props2.handlerSetMessage,\n          dialog = _this$props2.dialog;\n\n      if (dialog.message) {\n        handlerSetMessage(dialog.message);\n      }\n      handlerCloseDialog();\n    }, _this.checkConditions = function (answer) {\n      var conditions = answer.conditions;\n      var _this$props3 = _this.props,\n          inventory = _this$props3.inventory,\n          tasks = _this$props3.tasks,\n          actions = _this$props3.actions;\n\n      if (!conditions) return true;\n\n      if (Array.isArray(conditions.inventory) && conditions.inventory.length && !conditions.inventory.every(function (object) {\n        return inventory.find(function (_object) {\n          return _object.name === object;\n        });\n      })) {\n        return false;\n      }\n\n      if (Array.isArray(conditions.tasks) && conditions.tasks.length && !conditions.tasks.every(function (object) {\n        return tasks.find(function (_object) {\n          return _object.name === object.name && _object.status === object.status;\n        });\n      })) {\n        return false;\n      }\n\n      return true;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Game.prototype.render = function render() {\n    var _props = this.props,\n        locationActive = _props.locationActive,\n        dialog = _props.dialog,\n        character = _props.character,\n        inventory = _props.inventory,\n        tasks = _props.tasks,\n        message = _props.message,\n        isOpenChest = _props.isOpenChest,\n        displayTask = _props.displayTask,\n        handlerDisplayTask = _props.handlerDisplayTask,\n        handlerChangeLocation = _props.handlerChangeLocation,\n        handlerStartDialog = _props.handlerStartDialog,\n        handlerOpenChest = _props.handlerOpenChest,\n        handlerCloseChest = _props.handlerCloseChest;\n\n\n    return Object(preact_min[\"h\"])(\n      'div',\n      { id: 'game', 'class': game_style_default.a.game },\n      Object(preact_min[\"h\"])(components_location, game__extends({}, locationActive, {\n        handlerChangeLocation: handlerChangeLocation,\n        handlerClickCharacter: handlerStartDialog\n      })),\n      dialog && character && Object(preact_min[\"h\"])(components_conversation, { dialog: dialog,\n        character: character,\n        checkConditions: this.checkConditions,\n        handlerNextDialog: this.handlerDialog,\n        handlerCloseDialog: this.handlerCloseDialog\n      }),\n      Object(preact_min[\"h\"])(chest, { open: isOpenChest,\n        inventory: inventory,\n        tasks: tasks,\n        displayTask: displayTask,\n        handlerOpenChest: handlerOpenChest,\n        handlerCloseChest: handlerCloseChest,\n        handlerDisplayTask: handlerDisplayTask\n      }),\n      message && Object(preact_min[\"h\"])(components_message, { message: message })\n    );\n  };\n\n  return Game;\n}(preact_min[\"Component\"]);\n\nvar mapStateToProps = Object(dist[\"createPropsSelector\"])({\n  locationActive: getLocationActive,\n  dialog: getDialog,\n  character: getCharacter,\n  inventory: getInventory,\n  tasks: getTasks,\n  isOpenChest: isOpenChestSelector,\n  displayTask: displayTaskSelect,\n  message: getMessageSelector\n});\n\nvar game_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handlerChangeLocation: function handlerChangeLocation(locationName) {\n      dispatch(changeLocation(locationName));\n    },\n    handlerStartDialog: function handlerStartDialog(characterName) {\n      dispatch(startDialog(characterName));\n    },\n    handlerNextDialog: function handlerNextDialog(conversation) {\n      dispatch(nextDialog(conversation));\n    },\n    handlerCloseDialog: function handlerCloseDialog() {\n      dispatch(closeDialog());\n    },\n    handlerAddTask: function handlerAddTask(taskName) {\n      dispatch(addTask(taskName));\n    },\n    handlerSaveCharacterToHistory: function handlerSaveCharacterToHistory(character) {\n      dispatch(saveCharacterToHistory(character));\n    },\n    handlerAddInventory: function handlerAddInventory(object) {\n      dispatch(addObjectToInventory(object));\n    },\n    handlerRemoveInventory: function handlerRemoveInventory(object) {\n      dispatch(removeObjectToInventory(object));\n    },\n    handlerOpenChest: function handlerOpenChest() {\n      dispatch(openChest());\n    },\n    handlerCloseChest: function handlerCloseChest() {\n      dispatch(closeChest());\n    },\n    handlerDisplayTask: function handlerDisplayTask(task) {\n      dispatch(displayTaskAction(task));\n    },\n    handlerAddTipToTask: function handlerAddTipToTask(task) {\n      dispatch(addTipToTask(task));\n    },\n    handlerChangeStatusTask: function handlerChangeStatusTask(task) {\n      dispatch(changeStatusTask(task));\n    },\n    handlerSetMessage: function handlerSetMessage(message) {\n      dispatch(setMessage(message));\n    }\n  };\n};\n\n/* harmony default export */ var game = __webpack_exports__[\"default\"] = (Object(preact_redux_esm[\"b\" /* connect */])(mapStateToProps, game_mapDispatchToProps)(game_Game));\n\n/***/ }),\n\n/***/ \"DWKC\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"arrow\":\"arrow__2_DE2\"};\n\n/***/ }),\n\n/***/ \"Dmfw\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"task-description\":\"task-description__28FzF\",\"task-description--hr\":\"task-description--hr__3BYBx\",\"task-description--tip\":\"task-description--tip__hBTbM\"};\n\n/***/ }),\n\n/***/ \"SdCE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}\n\n/***/ }),\n\n/***/ \"VPkN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n   true ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Immutable = factory();\n})(this, function () {\n  'use strict';\n  var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n    return isIterable(value) ? value : Seq(value);\n  }\n\n  createClass(KeyedIterable, Iterable);\n  function KeyedIterable(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  createClass(IndexedIterable, Iterable);\n  function IndexedIterable(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  createClass(SetIterable, Iterable);\n  function SetIterable(value) {\n    return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n  function Iterator(next) {\n    this.next = next;\n  }\n\n  Iterator.prototype.toString = function () {\n    return '[Iterator]';\n  };\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect = Iterator.prototype.toSource = function () {\n    return this.toString();\n  };\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? iteratorResult.value = value : iteratorResult = {\n      value: value, done: false\n    };\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n  function Seq(value) {\n    return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);\n  }\n\n  Seq.of = function () /*...values*/{\n    return Seq(arguments);\n  };\n\n  Seq.prototype.toSeq = function () {\n    return this;\n  };\n\n  Seq.prototype.toString = function () {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function () {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n    return this;\n  };\n\n  // abstract __iterateUncached(fn, reverse)\n\n  Seq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, true);\n  };\n\n  // abstract __iteratorUncached(type, reverse)\n\n  Seq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, true);\n  };\n\n  createClass(KeyedSeq, Seq);\n  function KeyedSeq(value) {\n    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);\n  }\n\n  KeyedSeq.prototype.toKeyedSeq = function () {\n    return this;\n  };\n\n  createClass(IndexedSeq, Seq);\n  function IndexedSeq(value) {\n    return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n  }\n\n  IndexedSeq.of = function () /*...values*/{\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function () {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function () {\n    return this.__toString('Seq [', ']');\n  };\n\n  IndexedSeq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, false);\n  };\n\n  IndexedSeq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, false);\n  };\n\n  createClass(SetSeq, Seq);\n  function SetSeq(value) {\n    return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();\n  }\n\n  SetSeq.of = function () /*...values*/{\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function () {\n    return this;\n  };\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n  createClass(ArraySeq, IndexedSeq);\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  ArraySeq.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function (fn, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  };\n\n  ArraySeq.prototype.__iterator = function (type, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);\n    });\n  };\n\n  createClass(ObjectSeq, KeyedSeq);\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  ObjectSeq.prototype.get = function (key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function (key) {\n    return this._object.hasOwnProperty(key);\n  };\n\n  ObjectSeq.prototype.__iterate = function (fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      if (fn(object[key], key, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  };\n\n  ObjectSeq.prototype.__iterator = function (type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);\n    });\n  };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n  createClass(IterableSeq, IndexedSeq);\n  function IterableSeq(iterable) {\n    this._iterable = iterable;\n    this.size = iterable.length || iterable.size;\n  }\n\n  IterableSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    var iterations = 0;\n    if (isIterator(iterator)) {\n      var step;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n    return iterations;\n  };\n\n  IterableSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  createClass(IteratorSeq, IndexedSeq);\n  function IteratorSeq(iterator) {\n    this._iterator = iterator;\n    this._iteratorCache = [];\n  }\n\n  IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    while (iterations < cache.length) {\n      if (fn(cache[iterations], iterations++, this) === false) {\n        return iterations;\n      }\n    }\n    var step;\n    while (!(step = iterator.next()).done) {\n      var val = step.value;\n      cache[iterations] = val;\n      if (fn(val, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  };\n\n  IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    return new Iterator(function () {\n      if (iterations >= cache.length) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        cache[iterations] = step.value;\n      }\n      return iteratorValue(type, iterations, cache[iterations++]);\n    });\n  };\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values: ' + value);\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function () {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ? fromJSWith(converter, json, '', { '': json }) : fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function (v, k) {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function (v, k) {\n      if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  Repeat.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function (searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n  };\n\n  Repeat.prototype.reverse = function () {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function (fn, reverse) {\n    for (var ii = 0; ii < this.size; ii++) {\n      if (fn(this._value, ii, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  };\n\n  Repeat.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();\n    });\n  };\n\n  Repeat.prototype.equals = function (other) {\n    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);\n  };\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n    if (end === undefined) {\n      end = Infinity;\n    }\n    step = step === undefined ? 1 : Math.abs(step);\n    if (end < start) {\n      step = -step;\n    }\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n      EMPTY_RANGE = this;\n    }\n  }\n\n  Range.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';\n  };\n\n  Range.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n  };\n\n  Range.prototype.includes = function (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n  };\n\n  Range.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n  };\n\n  Range.prototype.indexOf = function (searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function (searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function (fn, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(value, ii, this) === false) {\n        return ii + 1;\n      }\n      value += reverse ? -step : step;\n    }\n    return ii;\n  };\n\n  Range.prototype.__iterator = function (type, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    var ii = 0;\n    return new Iterator(function () {\n      var v = value;\n      value += reverse ? -step : step;\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n    });\n  };\n\n  Range.prototype.equals = function (other) {\n    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n  };\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n  function Collection() {\n    throw TypeError('Abstract');\n  }\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {\n    a = a | 0; // int\n    b = b | 0; // int\n    var c = a & 0xffff;\n    var d = b & 0xffff;\n    // Shift by 0 fixes the sign on the high part.\n    return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0; // int\n  };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function () {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = function () {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1:\n          // Element\n          return node.uniqueID;\n        case 9:\n          // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');\n  }\n\n  createClass(Map, KeyedCollection);\n\n  // @pragma Construction\n\n  function Map(value) {\n    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  Map.of = function () {\n    var keyValues = SLICE$0.call(arguments, 0);\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n\n  Map.prototype.toString = function () {\n    return this.__toString('Map {', '}');\n  };\n\n  // @pragma Access\n\n  Map.prototype.get = function (k, notSetValue) {\n    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;\n  };\n\n  // @pragma Modification\n\n  Map.prototype.set = function (k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.setIn = function (keyPath, v) {\n    return this.updateIn(keyPath, NOT_SET, function () {\n      return v;\n    });\n  };\n\n  Map.prototype.remove = function (k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteIn = function (keyPath) {\n    return this.updateIn(keyPath, function () {\n      return NOT_SET;\n    });\n  };\n\n  Map.prototype.update = function (k, notSetValue, updater) {\n    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);\n  };\n\n  Map.prototype.updateIn = function (keyPath, notSetValue, updater) {\n    if (!updater) {\n      updater = notSetValue;\n      notSetValue = undefined;\n    }\n    var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);\n    return updatedValue === NOT_SET ? undefined : updatedValue;\n  };\n\n  Map.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyMap();\n  };\n\n  // @pragma Composition\n\n  Map.prototype.merge = function () /*...iters*/{\n    return mergeIntoMapWith(this, undefined, arguments);\n  };\n\n  Map.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, merger, iters);\n  };\n\n  Map.prototype.mergeIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n\n  Map.prototype.mergeDeep = function () /*...iters*/{\n    return mergeIntoMapWith(this, deepMerger, arguments);\n  };\n\n  Map.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n  };\n\n  Map.prototype.mergeDeepIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n\n  Map.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  };\n\n  // @pragma Mutability\n\n  Map.prototype.withMutations = function (fn) {\n    var mutable = this.asMutable();\n    fn(mutable);\n    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n  };\n\n  Map.prototype.asMutable = function () {\n    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n  };\n\n  Map.prototype.asImmutable = function () {\n    return this.__ensureOwner();\n  };\n\n  Map.prototype.wasAltered = function () {\n    return this.__altered;\n  };\n\n  Map.prototype.__iterator = function (type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    this._root && this._root.iterate(function (entry) {\n      iterations++;\n      return fn(entry[1], entry[0], this$0);\n    }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n  // #pragma Trie Nodes\n\n\n  function ArrayMapNode(ownerID, entries) {\n    this.ownerID = ownerID;\n    this.entries = entries;\n  }\n\n  ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n    return notSetValue;\n  };\n\n  ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n\n    var entries = this.entries;\n    var idx = 0;\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n    var exists = idx < len;\n\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n\n    if (removed && entries.length === 1) {\n      return; // undefined\n    }\n\n    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n      return createNodes(ownerID, entries, key, value);\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n\n    return new ArrayMapNode(ownerID, newEntries);\n  };\n\n  function BitmapIndexedNode(ownerID, bitmap, nodes) {\n    this.ownerID = ownerID;\n    this.bitmap = bitmap;\n    this.nodes = nodes;\n  }\n\n  BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n    var bitmap = this.bitmap;\n    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);\n  };\n\n  BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var bit = 1 << keyHashFrag;\n    var bitmap = this.bitmap;\n    var exists = (bitmap & bit) !== 0;\n\n    if (!exists && value === NOT_SET) {\n      return this;\n    }\n\n    var idx = popCount(bitmap & bit - 1);\n    var nodes = this.nodes;\n    var node = exists ? nodes[idx] : undefined;\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n    if (newNode === node) {\n      return this;\n    }\n\n    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n    }\n\n    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n      return nodes[idx ^ 1];\n    }\n\n    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n      return newNode;\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);\n\n    if (isEditable) {\n      this.bitmap = newBitmap;\n      this.nodes = newNodes;\n      return this;\n    }\n\n    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n  };\n\n  function HashArrayMapNode(ownerID, count, nodes) {\n    this.ownerID = ownerID;\n    this.count = count;\n    this.nodes = nodes;\n  }\n\n  HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var node = this.nodes[idx];\n    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n  };\n\n  HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var removed = value === NOT_SET;\n    var nodes = this.nodes;\n    var node = nodes[idx];\n\n    if (removed && !node) {\n      return this;\n    }\n\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n    if (newNode === node) {\n      return this;\n    }\n\n    var newCount = this.count;\n    if (!node) {\n      newCount++;\n    } else if (!newNode) {\n      newCount--;\n      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n        return packNodes(ownerID, nodes, newCount, idx);\n      }\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n    if (isEditable) {\n      this.count = newCount;\n      this.nodes = newNodes;\n      return this;\n    }\n\n    return new HashArrayMapNode(ownerID, newCount, newNodes);\n  };\n\n  function HashCollisionNode(ownerID, keyHash, entries) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entries = entries;\n  }\n\n  HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n    return notSetValue;\n  };\n\n  HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var removed = value === NOT_SET;\n\n    if (keyHash !== this.keyHash) {\n      if (removed) {\n        return this;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n    }\n\n    var entries = this.entries;\n    var idx = 0;\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n    var exists = idx < len;\n\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n\n    if (removed && len === 2) {\n      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n\n    return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n  };\n\n  function ValueNode(ownerID, keyHash, entry) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entry = entry;\n  }\n\n  ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n  };\n\n  ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var keyMatch = is(key, this.entry[0]);\n    if (keyMatch ? value === this.entry[1] : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n\n    if (removed) {\n      SetRef(didChangeSize);\n      return; // undefined\n    }\n\n    if (keyMatch) {\n      if (ownerID && ownerID === this.ownerID) {\n        this.entry[1] = value;\n        return this;\n      }\n      return new ValueNode(ownerID, this.keyHash, [key, value]);\n    }\n\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n  };\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  };\n\n  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  };\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  };\n\n  createClass(MapIterator, Iterator);\n\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  MapIterator.prototype.next = function () {\n    var type = this._type;\n    var stack = this._stack;\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex;\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n        if (index <= maxIndex) {\n          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n          continue;\n        }\n      }\n      stack = this._stack = this._stack.__prev;\n    }\n    return iteratorDone();\n  };\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function (existing, value, key) {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function (collection) {\n      var mergeIntoMap = merger ? function (value, key) {\n        collection.update(key, NOT_SET, function (existing) {\n          return existing === NOT_SET ? value : merger(existing, value, key);\n        });\n      } : function (value, key) {\n        collection.set(key, value);\n      };\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(isNotSet || existing && existing.set, 'invalid keyPath');\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);\n    return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - (x >> 1 & 0x55555555);\n    x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n    x = x + (x >> 4) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n  // @pragma Construction\n\n  function List(value) {\n    var empty = emptyList();\n    if (value === null || value === undefined) {\n      return empty;\n    }\n    if (isList(value)) {\n      return value;\n    }\n    var iter = IndexedIterable(value);\n    var size = iter.size;\n    if (size === 0) {\n      return empty;\n    }\n    assertNotInfinite(size);\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) {\n        return list.set(i, v);\n      });\n    });\n  }\n\n  List.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  List.prototype.toString = function () {\n    return this.__toString('List [', ']');\n  };\n\n  // @pragma Access\n\n  List.prototype.get = function (index, notSetValue) {\n    index = wrapIndex(this, index);\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n    return notSetValue;\n  };\n\n  // @pragma Modification\n\n  List.prototype.set = function (index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function (index) {\n    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function (index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyList();\n  };\n\n  List.prototype.push = function () /*...values*/{\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function () {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function () /*...values*/{\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function () {\n    return setListBounds(this, 1);\n  };\n\n  // @pragma Composition\n\n  List.prototype.merge = function () /*...iters*/{\n    return mergeIntoListWith(this, undefined, arguments);\n  };\n\n  List.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, merger, iters);\n  };\n\n  List.prototype.mergeDeep = function () /*...iters*/{\n    return mergeIntoListWith(this, deepMerger, arguments);\n  };\n\n  List.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, deepMergerWith(merger), iters);\n  };\n\n  List.prototype.setSize = function (size) {\n    return setListBounds(this, 0, size);\n  };\n\n  // @pragma Iteration\n\n  List.prototype.slice = function (begin, end) {\n    var size = this.size;\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));\n  };\n\n  List.prototype.__iterator = function (type, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function (fn, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    var value;\n    while ((value = values()) !== DONE) {\n      if (fn(value, index++, this) === false) {\n        break;\n      }\n    }\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      return this;\n    }\n    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n  };\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n  function VNode(array, ownerID) {\n    this.array = array;\n    this.ownerID = ownerID;\n  }\n\n  // TODO: seems like these methods are very similar\n\n  VNode.prototype.removeBefore = function (ownerID, level, index) {\n    if (index === level ? 1 << level : 0 || this.array.length === 0) {\n      return this;\n    }\n    var originIndex = index >>> level & MASK;\n    if (originIndex >= this.array.length) {\n      return new VNode([], ownerID);\n    }\n    var removingFirst = originIndex === 0;\n    var newChild;\n    if (level > 0) {\n      var oldChild = this.array[originIndex];\n      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n      if (newChild === oldChild && removingFirst) {\n        return this;\n      }\n    }\n    if (removingFirst && !newChild) {\n      return this;\n    }\n    var editable = editableVNode(this, ownerID);\n    if (!removingFirst) {\n      for (var ii = 0; ii < originIndex; ii++) {\n        editable.array[ii] = undefined;\n      }\n    }\n    if (newChild) {\n      editable.array[originIndex] = newChild;\n    }\n    return editable;\n  };\n\n  VNode.prototype.removeAfter = function (ownerID, level, index) {\n    if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n      return this;\n    }\n    var sizeIndex = index - 1 >>> level & MASK;\n    if (sizeIndex >= this.array.length) {\n      return this;\n    }\n\n    var newChild;\n    if (level > 0) {\n      var oldChild = this.array[sizeIndex];\n      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n      if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n        return this;\n      }\n    }\n\n    var editable = editableVNode(this, ownerID);\n    editable.array.splice(sizeIndex + 1);\n    if (newChild) {\n      editable.array[sizeIndex] = newChild;\n    }\n    return editable;\n  };\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function () {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : left - offset >> level;\n      var to = (right - offset >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function () {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function (list) {\n        index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = index >>> level & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << list._level + SHIFT) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[rawIndex >>> level & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << newLevel + SHIFT) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = oldTailOffset >>> level & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n      // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = newOrigin >>> newLevel & MASK;\n        if (beginIndex !== newTailOffset >>> newLevel & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;\n  }\n\n  createClass(OrderedMap, Map);\n\n  // @pragma Construction\n\n  function OrderedMap(value) {\n    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  OrderedMap.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function () {\n    return this.__toString('OrderedMap {', '}');\n  };\n\n  // @pragma Access\n\n  OrderedMap.prototype.get = function (k, notSetValue) {\n    var index = this._map.get(k);\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  };\n\n  // @pragma Modification\n\n  OrderedMap.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._map.clear();\n      this._list.clear();\n      return this;\n    }\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function (k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function (k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.wasAltered = function () {\n    return this._map.wasAltered() || this._list.wasAltered();\n  };\n\n  OrderedMap.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._list.__iterate(function (entry) {\n      return entry && fn(entry[1], entry[0], this$0);\n    }, reverse);\n  };\n\n  OrderedMap.prototype.__iterator = function (type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    var newList = this._list.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) {\n      // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function (entry, idx) {\n          return entry !== undefined && i !== idx;\n        });\n        newMap = newList.toKeyedSeq().map(function (entry) {\n          return entry[0];\n        }).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  ToKeyedSequence.prototype.get = function (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function (key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function () {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function () {\n    var this$0 = this;\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().reverse();\n      };\n    }\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function (mapper, context) {\n    var this$0 = this;\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().map(mapper, context);\n      };\n    }\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var ii;\n    return this._iter.__iterate(this._useKeys ? function (v, k) {\n      return fn(v, k, this$0);\n    } : (ii = reverse ? resolveSize(this) : 0, function (v) {\n      return fn(v, reverse ? --ii : ii++, this$0);\n    }), reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function (type, reverse) {\n    if (this._useKeys) {\n      return this._iter.__iterator(type, reverse);\n    }\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var ii = reverse ? resolveSize(this) : 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n    });\n  };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n  createClass(ToIndexedSequence, IndexedSeq);\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  ToIndexedSequence.prototype.includes = function (value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    return this._iter.__iterate(function (v) {\n      return fn(v, iterations++, this$0);\n    }, reverse);\n  };\n\n  ToIndexedSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n\n  createClass(ToSetSequence, SetSeq);\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  ToSetSequence.prototype.has = function (key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (v) {\n      return fn(v, v, this$0);\n    }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  createClass(FromEntriesSequence, KeyedSeq);\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  FromEntriesSequence.prototype.entrySeq = function () {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedIterable = isIterable(entry);\n        return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);\n        }\n      }\n    });\n  };\n\n  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function () {\n      return iterable;\n    };\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function () {\n        return iterable.reverse();\n      };\n      return reversedSequence;\n    };\n    flipSequence.has = function (key) {\n      return iterable.includes(key);\n    };\n    flipSequence.includes = function (key) {\n      return iterable.has(key);\n    };\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(k, v, this$0) !== false;\n      }, reverse);\n    };\n    flipSequence.__iteratorUncached = function (type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function () {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n    };\n    return flipSequence;\n  }\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function (key) {\n      return iterable.has(key);\n    };\n    mappedSequence.get = function (key, notSetValue) {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k, c) {\n        return fn(mapper.call(context, v, k, c), k, this$0) !== false;\n      }, reverse);\n    };\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function () {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);\n      });\n    };\n    return mappedSequence;\n  }\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function () {\n      return iterable;\n    };\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function () {\n          return iterable.flip();\n        };\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function (key, notSetValue) {\n      return iterable.get(useKeys ? key : -1 - key, notSetValue);\n    };\n    reversedSequence.has = function (key) {\n      return iterable.has(useKeys ? key : -1 - key);\n    };\n    reversedSequence.includes = function (value) {\n      return iterable.includes(value);\n    };\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(v, k, this$0);\n      }, !reverse);\n    };\n    reversedSequence.__iterator = function (type, reverse) {\n      return iterable.__iterator(type, !reverse);\n    };\n    return reversedSequence;\n  }\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function (key) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function (key, notSetValue) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function () {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    };\n    return filterSequence;\n  }\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), 0, function (a) {\n        return a + 1;\n      });\n    });\n    return groups.asImmutable();\n  }\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), function (a) {\n        return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;\n      });\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function (arr) {\n      return reify(iterable, coerce(arr));\n    });\n  }\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;\n      };\n    }\n\n    sliceSeq.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function (v, k) {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function (type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function () {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    };\n\n    return sliceSeq;\n  }\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function (v, k, c) {\n        return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);\n      });\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function () {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function (v, k, c) {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function () {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function (v) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function (v) {\n      return v.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(function (sum, seq) {\n      if (sum !== undefined) {\n        var size = seq.size;\n        if (size !== undefined) {\n          return sum + size;\n        }\n      }\n    }, 0);\n    return concatSeq;\n  }\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function (fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {\n        var this$0 = this;\n        iter.__iterate(function (v, k) {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    };\n    flatSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function () {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    };\n    return flatSequence;\n  }\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(function (v, k) {\n      return coerce(mapper.call(context, v, k, iterable));\n    }).flatten(true);\n  }\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 - 1;\n    interposedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function (v, k) {\n        return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;\n      }, reverse);\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function () {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(function (v, k) {\n      return [k, v, index++, mapper ? mapper(v, k, iterable) : v];\n    }).toArray();\n    entries.sort(function (a, b) {\n      return comparator(a[3], b[3]) || a[2] - b[2];\n    }).forEach(isKeyedIterable ? function (v, i) {\n      entries[i].length = 2;\n    } : function (v, i) {\n      entries[i] = v[1];\n    });\n    return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);\n  }\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq().map(function (v, k) {\n        return [v, mapper(v, k, iterable)];\n      }).reduce(function (a, b) {\n        return maxCompare(comparator, a[1], b[1]) ? b : a;\n      });\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function (a, b) {\n        return maxCompare(comparator, a, b) ? b : a;\n      });\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;\n  }\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function (i) {\n      return i.size;\n    }).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function (fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function (type, reverse) {\n      var iterators = iters.map(function (i) {\n        return i = Iterable(i), getIterator(reverse ? i.reverse() : i);\n      });\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function () {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function (i) {\n            return i.next();\n          });\n          isDone = steps.some(function (s) {\n            return s.done;\n          });\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {\n          return s.value;\n        })));\n      });\n    };\n    return zipSequence;\n  }\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n  function Record(defaultValues, name) {\n    var hasInitialized;\n\n    var RecordType = function Record(values) {\n      if (values instanceof RecordType) {\n        return values;\n      }\n      if (!(this instanceof RecordType)) {\n        return new RecordType(values);\n      }\n      if (!hasInitialized) {\n        hasInitialized = true;\n        var keys = Object.keys(defaultValues);\n        setProps(RecordTypePrototype, keys);\n        RecordTypePrototype.size = keys.length;\n        RecordTypePrototype._name = name;\n        RecordTypePrototype._keys = keys;\n        RecordTypePrototype._defaultValues = defaultValues;\n      }\n      this._map = Map(values);\n    };\n\n    var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n    RecordTypePrototype.constructor = RecordType;\n\n    return RecordType;\n  }\n\n  Record.prototype.toString = function () {\n    return this.__toString(recordName(this) + ' {', '}');\n  };\n\n  // @pragma Access\n\n  Record.prototype.has = function (k) {\n    return this._defaultValues.hasOwnProperty(k);\n  };\n\n  Record.prototype.get = function (k, notSetValue) {\n    if (!this.has(k)) {\n      return notSetValue;\n    }\n    var defaultVal = this._defaultValues[k];\n    return this._map ? this._map.get(k, defaultVal) : defaultVal;\n  };\n\n  // @pragma Modification\n\n  Record.prototype.clear = function () {\n    if (this.__ownerID) {\n      this._map && this._map.clear();\n      return this;\n    }\n    var RecordType = this.constructor;\n    return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n  };\n\n  Record.prototype.set = function (k, v) {\n    if (!this.has(k)) {\n      throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n    }\n    if (this._map && !this._map.has(k)) {\n      var defaultVal = this._defaultValues[k];\n      if (v === defaultVal) {\n        return this;\n      }\n    }\n    var newMap = this._map && this._map.set(k, v);\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n    return makeRecord(this, newMap);\n  };\n\n  Record.prototype.remove = function (k) {\n    if (!this.has(k)) {\n      return this;\n    }\n    var newMap = this._map && this._map.remove(k);\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n    return makeRecord(this, newMap);\n  };\n\n  Record.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n\n  Record.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterator(type, reverse);\n  };\n\n  Record.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterate(fn, reverse);\n  };\n\n  Record.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map && this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return makeRecord(this, newMap, ownerID);\n  };\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function get() {\n        return this.get(name);\n      },\n      set: function set(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n  // @pragma Construction\n\n  function Set(value) {\n    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  Set.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  Set.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n\n  Set.prototype.toString = function () {\n    return this.__toString('Set {', '}');\n  };\n\n  // @pragma Access\n\n  Set.prototype.has = function (value) {\n    return this._map.has(value);\n  };\n\n  // @pragma Modification\n\n  Set.prototype.add = function (value) {\n    return updateSet(this, this._map.set(value, true));\n  };\n\n  Set.prototype.remove = function (value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function () {\n    return updateSet(this, this._map.clear());\n  };\n\n  // @pragma Composition\n\n  Set.prototype.union = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n    if (iters.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetIterable(iters[ii]).forEach(function (value) {\n          return set.add(value);\n        });\n      }\n    });\n  };\n\n  Set.prototype.intersect = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (!iters.every(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n\n  Set.prototype.subtract = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (iters.some(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n\n  Set.prototype.merge = function () {\n    return this.union.apply(this, arguments);\n  };\n\n  Set.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.union.apply(this, iters);\n  };\n\n  Set.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._map.__iterate(function (_, k) {\n      return fn(k, k, this$0);\n    }, reverse);\n  };\n\n  Set.prototype.__iterator = function (type, reverse) {\n    return this._map.map(function (_, k) {\n      return k;\n    }).__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return this.__make(newMap, ownerID);\n  };\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n  // @pragma Construction\n\n  function OrderedSet(value) {\n    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  OrderedSet.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function () {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n  // @pragma Construction\n\n  function Stack(value) {\n    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);\n  }\n\n  Stack.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function () {\n    return this.__toString('Stack [', ']');\n  };\n\n  // @pragma Access\n\n  Stack.prototype.get = function (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function () {\n    return this._head && this._head.value;\n  };\n\n  // @pragma Modification\n\n  Stack.prototype.push = function () /*...values*/{\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments[ii],\n        next: head\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function (iter) {\n    iter = IndexedIterable(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.reverse().forEach(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head\n      };\n    });\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function () {\n    return this.slice(1);\n  };\n\n  Stack.prototype.unshift = function () /*...values*/{\n    return this.push.apply(this, arguments);\n  };\n\n  Stack.prototype.unshiftAll = function (iter) {\n    return this.pushAll(iter);\n  };\n\n  Stack.prototype.shift = function () {\n    return this.pop.apply(this, arguments);\n  };\n\n  Stack.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection.prototype.slice.call(this, begin, end);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  // @pragma Mutability\n\n  Stack.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  };\n\n  // @pragma Iteration\n\n  Stack.prototype.__iterate = function (fn, reverse) {\n    if (reverse) {\n      return this.reverse().__iterate(fn);\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function (type, reverse) {\n    if (reverse) {\n      return this.reverse().__iterator(type);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    });\n  };\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function keyCopier(key) {\n      ctor.prototype[key] = methods[key];\n    };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function toArray() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function (v, i) {\n        array[i] = v;\n      });\n      return array;\n    },\n\n    toIndexedSeq: function toIndexedSeq() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function toJS() {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJS === 'function' ? value.toJS() : value;\n      }).__toJS();\n    },\n\n    toJSON: function toJSON() {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJSON === 'function' ? value.toJSON() : value;\n      }).__toJS();\n    },\n\n    toKeyedSeq: function toKeyedSeq() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function toMap() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function toObject() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function (v, k) {\n        object[k] = v;\n      });\n      return object;\n    },\n\n    toOrderedMap: function toOrderedMap() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function toOrderedSet() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function toSet() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function toSetSeq() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function toSeq() {\n      return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();\n    },\n\n    toStack: function toStack() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function toList() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    // ### Common JavaScript methods and properties\n\n    toString: function toString() {\n      return '[Iterable]';\n    },\n\n    __toString: function __toString(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function concat() {\n      var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function includes(searchValue) {\n      return this.some(function (value) {\n        return is(value, searchValue);\n      });\n    },\n\n    entries: function entries() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function every(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function (v, k, c) {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function filter(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function find(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function forEach(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function join(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function (v) {\n        isFirst ? isFirst = false : joined += separator;\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function keys() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function map(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function reduce(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function (v, k, c) {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function reduceRight(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function reverse() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function slice(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function some(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function sort(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function values() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n    // ### More sequential methods\n\n    butLast: function butLast() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function isEmpty() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function () {\n        return true;\n      });\n    },\n\n    count: function count(predicate, context) {\n      return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);\n    },\n\n    countBy: function countBy(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function equals(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function entrySeq() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function () {\n        return iterable.toSeq();\n      };\n      return entriesSequence;\n    },\n\n    filterNot: function filterNot(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function findEntry(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function findKey(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function findLast(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function findLastEntry(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function findLastKey(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function first() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function flatMap(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function flatten(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function fromEntrySeq() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function get(searchKey, notSetValue) {\n      return this.find(function (_, key) {\n        return is(key, searchKey);\n      }, undefined, notSetValue);\n    },\n\n    getIn: function getIn(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function groupBy(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function has(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function hasIn(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function isSubset(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function (value) {\n        return iter.includes(value);\n      });\n    },\n\n    isSuperset: function isSuperset(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function keyOf(searchValue) {\n      return this.findKey(function (value) {\n        return is(value, searchValue);\n      });\n    },\n\n    keySeq: function keySeq() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function last() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function lastKeyOf(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function max(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function maxBy(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function min(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function minBy(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function rest() {\n      return this.slice(1);\n    },\n\n    skip: function skip(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function skipLast(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function skipWhile(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function skipUntil(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function sortBy(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function take(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function takeLast(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function takeWhile(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function takeUntil(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function valueSeq() {\n      return this.toIndexedSeq();\n    },\n\n    // ### Hashable Object\n\n    hashCode: function hashCode() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect = IterablePrototype.toSource = function () {\n    return this.toString();\n  };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function flip() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function mapEntries(mapper, context) {\n      var this$0 = this;\n      var iterations = 0;\n      return reify(this, this.toSeq().map(function (v, k) {\n        return mapper.call(context, [k, v], iterations++, this$0);\n      }).fromEntrySeq());\n    },\n\n    mapKeys: function mapKeys(mapper, context) {\n      var this$0 = this;\n      return reify(this, this.toSeq().flip().map(function (k, v) {\n        return mapper.call(context, k, v, this$0);\n      }).flip());\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function (v, k) {\n    return JSON.stringify(k) + ': ' + quoteString(v);\n  };\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function toKeyedSeq() {\n      return new ToKeyedSequence(this, false);\n    },\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function filter(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function findIndex(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function indexOf(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function lastIndexOf(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function reverse() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function slice(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function splice(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || numArgs === 2 && !removeNum) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));\n    },\n\n    // ### More collection methods\n\n    findLastIndex: function findLastIndex(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function first() {\n      return this.get(0);\n    },\n\n    flatten: function flatten(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function get(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {\n        return key === index;\n      }, undefined, notSetValue);\n    },\n\n    has: function has(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);\n    },\n\n    interpose: function interpose(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function interleave() /*...iterables*/{\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function keySeq() {\n      return Range(0, this.size);\n    },\n\n    last: function last() {\n      return this.get(-1);\n    },\n\n    skipWhile: function skipWhile(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function zip() /*, ...iterables */{\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function zipWith(zipper /*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function get(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function includes(value) {\n      return this.has(value);\n    },\n\n    // ### More sequential methods\n\n    keySeq: function keySeq() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  }\n\n  function neg(predicate) {\n    return function () {\n      return -predicate.apply(this, arguments);\n    };\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(keyed ? ordered ? function (v, k) {\n      h = 31 * h + hashMerge(hash(v), hash(k)) | 0;\n    } : function (v, k) {\n      h = h + hashMerge(hash(v), hash(k)) | 0;\n    } : ordered ? function (v) {\n      h = 31 * h + hash(v) | 0;\n    } : function (v) {\n      h = h + hash(v) | 0;\n    });\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n});\n\n/***/ }),\n\n/***/ \"b1zY\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"character\":\"character__3WXLR\",\"character--name\":\"character--name__12929\"};\n\n/***/ }),\n\n/***/ \"lCuA\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"message\":\"message__2EYcP\",\"message--bg\":\"message--bg__1T_ah\",\"message--text\":\"message--text__1Fsy5\",\"message--out\":\"message--out__20Gv1\"};\n\n/***/ }),\n\n/***/ \"nfdf\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"inventory\":\"inventory__UfAL5\",\"inventory--item\":\"inventory--item__a8wD_\"};\n\n/***/ }),\n\n/***/ \"pMzk\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"chest--modal\":\"chest--modal__pxjOt\",\"chest--bg\":\"chest--bg__wvJv6\",\"chest--close\":\"chest--close__2TAFp\",\"chest--target\":\"chest--target__1slf3\",\"chest--content\":\"chest--content__1eSSp\",\"chest--title\":\"chest--title__2tpie\"};\n\n/***/ }),\n\n/***/ \"qTRi\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createHasSelector = exports.invertSelector = exports.createGetSelector = exports.createPropsSelector = exports.ensureJSSelector = exports.selectorToJS = exports.createImmutableComparingSelector = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n} : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _reselect = __webpack_require__(\"SdCE\");\n\nvar _immutable = __webpack_require__(\"VPkN\");\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar createImmutableComparingSelector = exports.createImmutableComparingSelector = (0, _reselect.createSelectorCreator)(_reselect.defaultMemoize, _immutable2.default.is);\n\n/**\n * Creates a selector that handles the conversion from Immutable\n * objects to plain Javascript objects.\n *\n * If the result of the input selector is identical to its previous\n * result using Immutable.is, this will return the same JS object as\n * the previous call.\n *\n * This simplifies downstream update checks substantially, since a\n * shallow comparison of the resulting JS objects will only show\n * equality if they are deeply equal. This allows optimization of\n * updates using shallow comparisons in reselect, react-redux, and\n * various React utilities.\n *\n * @param {function} selector - A selector returning an Immutable object\n * @returns {function}\n */\nvar selectorToJS = exports.selectorToJS = function selectorToJS(selector) {\n    return createImmutableComparingSelector(selector, function (raw) {\n        return raw ? raw.toJS() : null;\n    });\n};\n\nvar ensureJSSelector = exports.ensureJSSelector = function ensureJSSelector(selector) {\n    return createImmutableComparingSelector(selector, function () {\n        var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n        if (!item || (typeof item === 'undefined' ? 'undefined' : _typeof(item)) !== 'object') {\n            return item;\n        }\n\n        if ('toJS' in item && typeof item.toJS === 'function') {\n            return item.toJS();\n        }\n        return item;\n    });\n};\n\nvar createPropsSelector = exports.createPropsSelector = function createPropsSelector(selectors) {\n    var wrappedSelectors = {};\n    Object.keys(selectors).forEach(function (key) {\n        wrappedSelectors[key] = ensureJSSelector(selectors[key]);\n    });\n    return (0, _reselect.createStructuredSelector)(wrappedSelectors);\n};\n\n/**\n * Creates a selector that gets a value from a selected Immutable object.\n *\n * @param {function} selector - A selector returning an Immutable object\n * @param {string|number|function} key - The key to be looked up on\n *   the Immutable object. If a function is passed it is treated as a\n *   selector returning the desired key.\n * @param {*} [defaultValue] - An optional value to be returned if the\n *   key does not exist in the Immutable object.\n * @returns {function}\n */\nvar createGetSelector = exports.createGetSelector = function createGetSelector(selector, key, defaultValue) {\n    if (typeof key === 'function') {\n        return (0, _reselect.createSelector)(selector, key, function (obj, keyValue) {\n            return obj.get(keyValue, defaultValue);\n        });\n    }\n    return (0, _reselect.createSelector)(selector, function (obj) {\n        return obj.get(key, defaultValue);\n    });\n};\n\nvar invertSelector = exports.invertSelector = function invertSelector(selector) {\n    return (0, _reselect.createSelector)(selector, function (bool) {\n        return !bool;\n    });\n};\n\n/**\n * Creates a selector that checks whether a key exists in a selected\n * Immutable object.\n *\n * @param {function} selector - A selector returning an Immutable object\n * @param {string|number|function} key - The key to be checked on\n *   the Immutable object. If a function is passed it is treated as a\n *   selector returning the desired key.\n * @returns {function}\n */\nvar createHasSelector = exports.createHasSelector = function createHasSelector(selector, key) {\n    if (typeof key === 'function') {\n        return (0, _reselect.createSelector)(selector, key, function (obj, keyValue) {\n            return obj.has(keyValue);\n        });\n    }\n    return (0, _reselect.createSelector)(selector, function (obj) {\n        return obj.has(key);\n    });\n};\n\n/***/ }),\n\n/***/ \"sNnD\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"task-list--item\":\"task-list--item__3WVW4\",\"task-list--item-actived\":\"task-list--item-actived__1e1rB\",\"task-list\":\"task-list__2TtiR\",\"task-list--empty\":\"task-list--empty__2nqWe\",\"task-list--status\":\"task-list--status__1Ru9E\",\"task-list--name\":\"task-list--name__3euft\",\"task-list--index\":\"task-list--index__clTqV\"};\n\n/***/ }),\n\n/***/ \"vJ5B\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"game\":\"game__2YIVz\"};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-game.chunk.a7430.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"location--type-firstLocation\":\"location--type-firstLocation__3l4S8\",\"Vasia\":\"Vasia__3aWyP\",\"secondLocation\":\"secondLocation__2AT-1\",\"location--type-secondLocation\":\"location--type-secondLocation__sxnew\",\"Sokol\":\"Sokol__16riw\",\"firstLocation\":\"firstLocation__Fp9IR\",\"location\":\"location__3MKUz\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/location/style.scss\n// module id = 9UV0\n// module chunks = 0","// removed by extract-text-webpack-plugin\nmodule.exports = {\"conversation\":\"conversation__3mSUd\",\"conversation--bg\":\"conversation--bg__1GN0n\",\"conversation--answers\":\"conversation--answers__2I6Qb\",\"conversation--content\":\"conversation--content__1vt9r\",\"conversation--text\":\"conversation--text__-mA6T\",\"conversation--avatar\":\"conversation--avatar__2aZM9\",\"conversation--hr\":\"conversation--hr__2PzA8\",\"conversation--name\":\"conversation--name__1cuZh\",\"conversation--panel\":\"conversation--panel__1Z4sp\",\"conversation--button-disabled\":\"conversation--button-disabled__3xhhD\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/conversation/style.scss\n// module id = A00b\n// module chunks = 0","import style from './style';\r\n\r\nconst Character = ({ name, available, className, handlerClick }) => (\r\n\t<div className={`${style.character} ${style.character}--how-${name} ${className}`} onClick={() => handlerClick(name)}>\r\n\t\t<div className={style['character--name']}>{name}</div>\r\n\t\t<img src={`/assets/characters/${name.toLowerCase()}.png`} alt={name} />\r\n\t</div>\r\n);\r\n\r\nexport default Character;\n\n\n// WEBPACK FOOTER //\n// ./components/character/index.js","import style from './style';\r\n\r\nconst Arrow = ({ name, available, type, className, handlerOnClick }) => (\r\n\t<div className={`${style.arrow} ${className}`}>\r\n\t\t<img src={`/assets/arrows/${type}.svg`} alt=\"arrow\" onClick={() => handlerOnClick(name)} />\r\n\t</div>\r\n);\r\n\r\nexport default Arrow;\n\n\n// WEBPACK FOOTER //\n// ./components/arrow/index.js","import style from './style';\r\nimport Character from '../character';\r\nimport Arrow from '../arrow';\r\n\r\nconst Location = ({ name, characters, nextLocations, handlerChangeLocation, handlerClickCharacter }) => (\r\n\t<div className={`${style.location} ${style[`location--type-${name}`]}`}>\r\n\t\t<img src={`/assets/locations/${name}.jpg`} alt=\"location\" />\r\n\t\t{characters.map(character => (<Character {...character} className={style[character.name]}\r\n\t\t\thandlerClick={handlerClickCharacter}\r\n\t\t                              />))}\r\n\t\t{nextLocations.map(location => (<Arrow {...location} className={style[location.name]}\r\n\t\t\thandlerOnClick={handlerChangeLocation}\r\n\t\t                                />))}\r\n\t</div>\r\n);\r\n\r\nexport default Location;\n\n\n// WEBPACK FOOTER //\n// ./components/location/index.js","import style from './style';\r\n\r\nconst Conversation = ({ character, dialog, handlerNextDialog, handlerCloseDialog, checkConditions }) => (\r\n\t<div>\r\n\t\t<div className={style.conversation}>\r\n\t\t\t<div className={style['conversation--content']}>\r\n\t\t\t\t<div className={style['conversation--text']}>{dialog.text}</div>\r\n\t\t\t\t<ul className={style['conversation--answers']}>\r\n\t\t\t\t\t{Array.isArray(dialog.answers) && dialog.answers\r\n\t\t\t\t\t\t.filter(checkConditions)\r\n\t\t\t\t\t\t.map(answer => (<li onClick={() => handlerNextDialog(answer)}>\r\n\t\t\t\t\t\t\t{answer.text}\r\n\t\t\t\t\t\t</li>))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className={style['conversation--avatar']}>\r\n\t\t\t\t<img src={`/assets/characters/avatar-${character.name.toLowerCase()}.png`} alt={name} />\r\n\t\t\t\t<div className={style['conversation--name']}>{character.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<hr className={style['conversation--hr']} />\r\n\t\t\t<div className={style['conversation--panel']}>\r\n\t\t\t\t<button type=\"button\" className={dialog.close ? '' : style['conversation--button-disabled']}\r\n\t\t\t\t\tonClick={handlerCloseDialog}\r\n\t\t\t\t>\r\n\t\t\t\t\t<img src=\"/assets/conversation/forward.svg\" alt=\"Покинуть диалог\" title=\"Покинуть диалог\" />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className={style['conversation--bg']} />\r\n\t</div>\r\n);\r\n\r\nexport default Conversation;\n\n\n// WEBPACK FOOTER //\n// ./components/conversation/index.js","import style from './style';\r\n\r\nconst Inventory = ({ inventory }) => (\r\n  <div className={style.inventory}>\r\n    {Array.isArray(inventory) && inventory.map((object) => {\r\n      return <div className={style['inventory--item']}>\r\n        <img src={`/assets/anothers/${object.name}.svg`} alt={object.name} title={object.description}/>\r\n      </div>\r\n    })}\r\n\t</div>\r\n);\r\n\r\nexport default Inventory;\n\n\n// WEBPACK FOOTER //\n// ./components/inventory/index.js","import style from './style';\r\n\r\nconst TaskList = ({ tasks, handlerClick, displayTask }) => (\r\n  <div className={style['task-list']}>\r\n    {Array.isArray(tasks) && tasks.length ? tasks.map((task, idx) => (\r\n      <div className={`${style['task-list--item']} ${displayTask && displayTask.name === task.name ? style['task-list--item-actived'] : ''}`} onClick={() => handlerClick(task)}>\r\n        <div className={style['task-list--index']}>{ idx + 1 }</div>\r\n        <div className={style['task-list--name']}>{ task.title }</div>\r\n        <div className={style['task-list--status']}>{ task.status }</div>\r\n      </div>\r\n    )) : <div className={style['task-list--empty']}>\r\n      Нету пока заданий\r\n    </div>}\r\n  </div>\r\n);\r\n\r\nexport default TaskList;\n\n\n// WEBPACK FOOTER //\n// ./components/task-list/index.js","import style from './style';\r\n\r\nconst TaskDescription = ({ description, tips }) => (\r\n  <div className={style['task-description']}>\r\n    { description }\r\n    <hr className={style['task-description--hr']}/>\r\n    {Array.isArray(tips) && tips.map((tip) => (\r\n      <div className={style['task-description--tip']}>\r\n        { tip }\r\n        <hr className={style['task-description--hr']}/>\r\n      </div>\r\n    ))}\r\n\t</div>\r\n);\r\n\r\nexport default TaskDescription;\n\n\n// WEBPACK FOOTER //\n// ./components/task-description/index.js","import style from './style';\r\nimport Inventory from '../inventory';\r\nimport TaskList from '../task-list';\r\nimport TaskDescription from '../task-description';\r\n\r\nconst Chest = ({ open, inventory, tasks, displayTask, handlerOpenChest, handlerCloseChest, handlerDisplayTask }) => (\r\n  <div className={style.chest}>\r\n\t\t<button type=\"button\" className={style['chest--target']} onClick={handlerOpenChest}>\r\n      <img src=\"/assets/anothers/treasure.svg\" alt=\"Открыть сундук\" title=\"Открыть сундук\" />\r\n    </button>\r\n    {open && <div className={style['chest--modal']}>\r\n      <div className={style['chest--content']}>\r\n        <div className={style['chest--title']}>Инвентарь</div>\r\n        <Inventory inventory={inventory} />\r\n      </div>\r\n      <div className={style['chest--content']}>\r\n        <div className={style['chest--title']}>Список заданий</div>\r\n        <TaskList tasks={tasks} handlerClick={handlerDisplayTask} displayTask={displayTask} />\r\n      </div>\r\n\t\t\t{displayTask && <div className={style['chest--content']}>\r\n        <div className={style['chest--title']}>{displayTask.title}</div>\r\n        <TaskDescription {...displayTask} />\r\n      </div>}\r\n      <button type=\"button\" className={style['chest--close']} onClick={handlerCloseChest}>\r\n        <img src=\"/assets/anothers/close.svg\" alt=\"Закрыть сундук\" title=\"Закрыть сундук\" />\r\n      </button>\r\n    </div>}\r\n\t\t<div className={style['сhest--bg']} />\r\n\t</div>\r\n);\r\n\r\nexport default Chest;\n\n\n// WEBPACK FOOTER //\n// ./components/chest/index.js","import style from './style';\r\n\r\nconst Message = ({ message }) => (\r\n  <div>\r\n    <div className={style.message}>\r\n      {/*<img src={`/assets/message/${slug.toLowerCase()}.png`} alt={name} />*/}\r\n      <div className={style['message--text']}>{message}</div>\r\n      <button onClick={() => location.reload()} className={style['message--out']} type=\"button\">\r\n        <img  src=\"/assets/conversation/forward.svg\" />\r\n      </button>\r\n    </div>\r\n    <div className={style['message--bg']}></div>\r\n\t</div>\r\n);\r\n\r\nexport default Message;\n\n\n// WEBPACK FOOTER //\n// ./components/message/index.js","import { createAction } from 'redux-actions';\r\nimport { CHANGE_LOCATION, ADD_OBJECT_TO_INVENTORY, REMOVE_OBJECT_TO_INVENTORY, OPEN_CHEST, CLOSE_CHEST, SET_MESSAGE } from '../constants/actions';\r\n\r\nexport const changeLocation = createAction(CHANGE_LOCATION, (locationName) => (locationName));\r\n\r\nexport const addObjectToInventory = createAction(ADD_OBJECT_TO_INVENTORY, (object) => (object));\r\n\r\nexport const removeObjectToInventory = createAction(REMOVE_OBJECT_TO_INVENTORY, (object) => (object));\r\n\r\nexport const openChest = createAction(OPEN_CHEST);\r\n\r\nexport const closeChest = createAction(CLOSE_CHEST);\r\n\r\nexport const setMessage = createAction(SET_MESSAGE, (message) => (message));\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./actions/general.js","import createAction from 'redux-actions/es/createAction';\r\nimport { NEXT_DIALOG, START_DIALOG, CLOSE_DIALOG, SAVE_CHARACTER_TO_HISTORY } from '../constants/actions';\r\n\r\nexport const startDialog = createAction(START_DIALOG, (characterName) => (characterName));\r\n\r\nexport const nextDialog = createAction(NEXT_DIALOG, (conversation) => (conversation));\r\n\r\nexport const closeDialog = createAction(CLOSE_DIALOG, (conversation) => (conversation));\r\n\r\nexport const saveCharacterToHistory = createAction(SAVE_CHARACTER_TO_HISTORY, (character) => (character));\n\n\n// WEBPACK FOOTER //\n// ./actions/conversation.js","import createAction from 'redux-actions/es/createAction';\r\nimport { ADD_TASK, CHANGE_STATUS_TASK, ADD_TIP_TO_TASK, DISPLAY_TASK } from '../constants/actions';\r\n\r\nexport const addTask = createAction(ADD_TASK, (taskName) => (taskName));\r\n\r\nexport const changeStatusTask = createAction(CHANGE_STATUS_TASK, (task) => (task));\r\n\r\nexport const addTipToTask = createAction(ADD_TIP_TO_TASK, (task) => (task));\r\n\r\nexport const displayTaskAction = createAction(DISPLAY_TASK, (task) => (task));\r\n\n\n\n// WEBPACK FOOTER //\n// ./actions/book.js","import { createGetSelector } from 'reselect-immutable-helpers';\r\n\r\nconst getGeneral = createGetSelector(state => state, 'general');\r\n\r\nexport const getLocationActive = createGetSelector(getGeneral, 'locationActive');\r\n\r\nexport const getInventory = createGetSelector(getGeneral, 'inventory');\r\n\r\nexport const isOpenChestSelector = createGetSelector(getGeneral, 'isOpenChest');\r\n\r\nexport const getMessageSelector = createGetSelector(getGeneral, 'message');\n\n\n// WEBPACK FOOTER //\n// ./selectors/general.js","import { createGetSelector } from 'reselect-immutable-helpers';\r\n\r\nexport const getConversation = createGetSelector(state => state, 'conversation');\r\n\r\nexport const getDialog = createGetSelector(getConversation, 'dialog');\r\n\r\nexport const getCharacter = createGetSelector(getConversation, 'character');\n\n\n// WEBPACK FOOTER //\n// ./selectors/conversation.js","import { createGetSelector } from 'reselect-immutable-helpers';\r\n\r\nconst getBook = createGetSelector(state => state, 'book');\r\n\r\nexport const getTasks = createGetSelector(getBook, 'tasks');\r\n\r\nexport const displayTaskSelect = createGetSelector(getBook, 'displayTask');\n\n\n// WEBPACK FOOTER //\n// ./selectors/book.js","import { Component } from 'preact';\r\nimport { connect } from 'preact-redux';\r\nimport { createPropsSelector } from 'reselect-immutable-helpers';\r\n\r\nimport Location from '../../components/location';\r\nimport Conversation from '../../components/conversation';\r\nimport Chest from '../../components/chest';\r\nimport Message from '../../components/message';\r\n\r\nimport { addObjectToInventory, removeObjectToInventory, changeLocation, openChest, closeChest, setMessage  } from '../../actions/general';\r\nimport { closeDialog, nextDialog, saveCharacterToHistory, startDialog } from '../../actions/conversation';\r\nimport { addTask, addTipToTask, displayTaskAction, changeStatusTask } from '../../actions/book';\r\n\r\nimport { getInventory, getLocationActive, isOpenChestSelector, getMessageSelector } from '../../selectors/general';\r\nimport { getCharacter, getDialog } from '../../selectors/conversation';\r\nimport { getTasks, displayTaskSelect } from '../../selectors/book';\r\nimport style from './style';\r\n\r\n\r\nclass Game extends Component {\r\n  \r\n  handlerDialog = (answer) => {\r\n    const {handlerNextDialog, handlerAddTask, handlerAddTipToTask, handlerSaveCharacterToHistory, handlerCloseDialog, handlerAddInventory, handlerRemoveInventory, handlerChangeStatusTask} = this.props;\r\n    const {character, task, message, history, close, inventory} = answer;\r\n  \r\n    if(character) {\r\n      handlerNextDialog(character);\r\n    }\r\n  \r\n    if(task) {\r\n      if(task.action === 'add') {\r\n        handlerAddTask(task.name);\r\n      } else if(task.action === 'tip') {\r\n        handlerAddTipToTask(task.params);\r\n      } else if(task.action === 'change_status'){\r\n        handlerChangeStatusTask(task.params);\r\n      }\r\n    }\r\n  \r\n    if(inventory) {\r\n      if(inventory.action === 'add') {\r\n        handlerAddInventory(inventory.object);\r\n      } else if(inventory.action === 'remove') {\r\n        handlerRemoveInventory(inventory.object);\r\n      }\r\n    }\r\n  \r\n    if(history && history.characters) {\r\n      history.characters.forEach((character) => {\r\n        handlerSaveCharacterToHistory(character);\r\n      });\r\n    }\r\n  \r\n    if(close) {\r\n      handlerCloseDialog();\r\n    }\r\n  };\r\n  \r\n  handlerCloseDialog = () => {\r\n    const { handlerCloseDialog, handlerSetMessage, dialog } = this.props;\r\n    if(dialog.message){\r\n      handlerSetMessage(dialog.message);\r\n    }\r\n    handlerCloseDialog();\r\n  }\r\n  \r\n  checkConditions = (answer) => {\r\n    const {conditions} = answer;\r\n    const {inventory, tasks, actions} = this.props;\r\n    if(!conditions) return true;\r\n  \r\n    if(Array.isArray(conditions.inventory) &&\r\n      conditions.inventory.length &&\r\n      !conditions.inventory.every((object) => (inventory.find(_object => _object.name === object)))\r\n    ) {\r\n      return false;\r\n    }\r\n  \r\n    if(Array.isArray(conditions.tasks) &&\r\n      conditions.tasks.length &&\r\n      !conditions.tasks.every((object) => (tasks.find(_object => _object.name === object.name && _object.status === object.status)))\r\n    ) {\r\n      return false;\r\n    }\r\n  \r\n    return true;\r\n  };\r\n  \r\n  render() {\r\n    const {\r\n    \tlocationActive,\r\n\t\t\tdialog,\r\n\t\t\tcharacter,\r\n\t\t\tinventory,\r\n\t\t\ttasks,\r\n      message,\r\n      isOpenChest,\r\n      displayTask,\r\n      handlerDisplayTask,\r\n\t\t\thandlerChangeLocation,\r\n\t\t\thandlerStartDialog,\r\n      handlerOpenChest,\r\n      handlerCloseChest } = this.props;\r\n    \r\n    return (<div id=\"game\" class={style.game}>\r\n  \t\t<Location {...locationActive}\r\n                handlerChangeLocation={handlerChangeLocation}\r\n                handlerClickCharacter={handlerStartDialog}\r\n      />\r\n      {dialog && character && <Conversation dialog={dialog}\r\n                                            character={character}\r\n                                            checkConditions={this.checkConditions}\r\n                                            handlerNextDialog={this.handlerDialog}\r\n                                            handlerCloseDialog={this.handlerCloseDialog}\r\n      />}\r\n      <Chest open={isOpenChest}\r\n\t\t\t\t\t\t inventory={inventory}\r\n\t\t\t\t\t\t tasks={tasks}\r\n             displayTask={displayTask}\r\n\t\t\t\t\t\t handlerOpenChest={handlerOpenChest}\r\n\t\t\t\t\t\t handlerCloseChest={handlerCloseChest}\r\n             handlerDisplayTask={handlerDisplayTask}\r\n      />\r\n      {message && <Message message={message}/>}\r\n  \t</div>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createPropsSelector({\r\n\tlocationActive: getLocationActive,\r\n  dialog: getDialog,\r\n  character: getCharacter,\r\n  inventory: getInventory,\r\n  tasks: getTasks,\r\n  isOpenChest: isOpenChestSelector,\r\n  displayTask: displayTaskSelect,\r\n  message: getMessageSelector,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handlerChangeLocation(locationName) {\r\n    dispatch(changeLocation(locationName));\r\n  },\r\n  handlerStartDialog(characterName) {\r\n    dispatch(startDialog(characterName));\r\n  },\r\n  handlerNextDialog(conversation) {\r\n    dispatch(nextDialog(conversation));\r\n  },\r\n  handlerCloseDialog() {\r\n    dispatch(closeDialog());\r\n  },\r\n  handlerAddTask(taskName) {\r\n    dispatch(addTask(taskName));\r\n  },\r\n  handlerSaveCharacterToHistory(character) {\r\n    dispatch(saveCharacterToHistory(character));\r\n  },\r\n  handlerAddInventory(object) {\r\n    dispatch(addObjectToInventory(object));\r\n  },\r\n  handlerRemoveInventory(object) {\r\n    dispatch(removeObjectToInventory(object));\r\n  },\r\n\thandlerOpenChest(){\r\n    dispatch(openChest());\r\n\t},\r\n  handlerCloseChest(){\r\n    dispatch(closeChest());\r\n  },\r\n  handlerDisplayTask(task){\r\n    dispatch(displayTaskAction(task));\r\n  },\r\n  handlerAddTipToTask(task) {\r\n    dispatch(addTipToTask(task));\r\n  },\r\n  handlerChangeStatusTask(task) {\r\n    dispatch(changeStatusTask(task));\r\n  },\r\n  handlerSetMessage(message) {\r\n    dispatch(setMessage(message));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n\n\n\n// WEBPACK FOOTER //\n// ./routes/game/index.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"arrow\":\"arrow__2_DE2\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/arrow/style.scss\n// module id = DWKC\n// module chunks = 0","// removed by extract-text-webpack-plugin\nmodule.exports = {\"task-description\":\"task-description__28FzF\",\"task-description--hr\":\"task-description--hr__3BYBx\",\"task-description--tip\":\"task-description--tip__hBTbM\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/task-description/style.scss\n// module id = Dmfw\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/reselect/lib/index.js","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));\n\n\n// WEBPACK FOOTER //\n// ../node_modules/reselect-immutable-helpers/node_modules/immutable/dist/immutable.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"character\":\"character__3WXLR\",\"character--name\":\"character--name__12929\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/character/style.scss\n// module id = b1zY\n// module chunks = 0","// removed by extract-text-webpack-plugin\nmodule.exports = {\"message\":\"message__2EYcP\",\"message--bg\":\"message--bg__1T_ah\",\"message--text\":\"message--text__1Fsy5\",\"message--out\":\"message--out__20Gv1\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/message/style.scss\n// module id = lCuA\n// module chunks = 0","// removed by extract-text-webpack-plugin\nmodule.exports = {\"inventory\":\"inventory__UfAL5\",\"inventory--item\":\"inventory--item__a8wD_\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/inventory/style.scss\n// module id = nfdf\n// module chunks = 0","// removed by extract-text-webpack-plugin\nmodule.exports = {\"chest--modal\":\"chest--modal__pxjOt\",\"chest--bg\":\"chest--bg__wvJv6\",\"chest--close\":\"chest--close__2TAFp\",\"chest--target\":\"chest--target__1slf3\",\"chest--content\":\"chest--content__1eSSp\",\"chest--title\":\"chest--title__2tpie\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/chest/style.scss\n// module id = pMzk\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createHasSelector = exports.invertSelector = exports.createGetSelector = exports.createPropsSelector = exports.ensureJSSelector = exports.selectorToJS = exports.createImmutableComparingSelector = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _reselect = require('reselect');\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createImmutableComparingSelector = exports.createImmutableComparingSelector = (0, _reselect.createSelectorCreator)(_reselect.defaultMemoize, _immutable2.default.is);\n\n/**\n * Creates a selector that handles the conversion from Immutable\n * objects to plain Javascript objects.\n *\n * If the result of the input selector is identical to its previous\n * result using Immutable.is, this will return the same JS object as\n * the previous call.\n *\n * This simplifies downstream update checks substantially, since a\n * shallow comparison of the resulting JS objects will only show\n * equality if they are deeply equal. This allows optimization of\n * updates using shallow comparisons in reselect, react-redux, and\n * various React utilities.\n *\n * @param {function} selector - A selector returning an Immutable object\n * @returns {function}\n */\nvar selectorToJS = exports.selectorToJS = function selectorToJS(selector) {\n    return createImmutableComparingSelector(selector, function (raw) {\n        return raw ? raw.toJS() : null;\n    });\n};\n\nvar ensureJSSelector = exports.ensureJSSelector = function ensureJSSelector(selector) {\n    return createImmutableComparingSelector(selector, function () {\n        var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n        if (!item || (typeof item === 'undefined' ? 'undefined' : _typeof(item)) !== 'object') {\n            return item;\n        }\n\n        if ('toJS' in item && typeof item.toJS === 'function') {\n            return item.toJS();\n        }\n        return item;\n    });\n};\n\nvar createPropsSelector = exports.createPropsSelector = function createPropsSelector(selectors) {\n    var wrappedSelectors = {};\n    Object.keys(selectors).forEach(function (key) {\n        wrappedSelectors[key] = ensureJSSelector(selectors[key]);\n    });\n    return (0, _reselect.createStructuredSelector)(wrappedSelectors);\n};\n\n/**\n * Creates a selector that gets a value from a selected Immutable object.\n *\n * @param {function} selector - A selector returning an Immutable object\n * @param {string|number|function} key - The key to be looked up on\n *   the Immutable object. If a function is passed it is treated as a\n *   selector returning the desired key.\n * @param {*} [defaultValue] - An optional value to be returned if the\n *   key does not exist in the Immutable object.\n * @returns {function}\n */\nvar createGetSelector = exports.createGetSelector = function createGetSelector(selector, key, defaultValue) {\n    if (typeof key === 'function') {\n        return (0, _reselect.createSelector)(selector, key, function (obj, keyValue) {\n            return obj.get(keyValue, defaultValue);\n        });\n    }\n    return (0, _reselect.createSelector)(selector, function (obj) {\n        return obj.get(key, defaultValue);\n    });\n};\n\nvar invertSelector = exports.invertSelector = function invertSelector(selector) {\n    return (0, _reselect.createSelector)(selector, function (bool) {\n        return !bool;\n    });\n};\n\n/**\n * Creates a selector that checks whether a key exists in a selected\n * Immutable object.\n *\n * @param {function} selector - A selector returning an Immutable object\n * @param {string|number|function} key - The key to be checked on\n *   the Immutable object. If a function is passed it is treated as a\n *   selector returning the desired key.\n * @returns {function}\n */\nvar createHasSelector = exports.createHasSelector = function createHasSelector(selector, key) {\n    if (typeof key === 'function') {\n        return (0, _reselect.createSelector)(selector, key, function (obj, keyValue) {\n            return obj.has(keyValue);\n        });\n    }\n    return (0, _reselect.createSelector)(selector, function (obj) {\n        return obj.has(key);\n    });\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/reselect-immutable-helpers/dist.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"task-list--item\":\"task-list--item__3WVW4\",\"task-list--item-actived\":\"task-list--item-actived__1e1rB\",\"task-list\":\"task-list__2TtiR\",\"task-list--empty\":\"task-list--empty__2nqWe\",\"task-list--status\":\"task-list--status__1Ru9E\",\"task-list--name\":\"task-list--name__3euft\",\"task-list--index\":\"task-list--index__clTqV\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/task-list/style.scss\n// module id = sNnD\n// module chunks = 0","// removed by extract-text-webpack-plugin\nmodule.exports = {\"game\":\"game__2YIVz\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./routes/game/style.scss\n// module id = vJ5B\n// module chunks = 0"],"sourceRoot":""}